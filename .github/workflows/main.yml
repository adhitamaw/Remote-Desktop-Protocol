name: Windows-RDP

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Download Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath .

    - name: Configure Ngrok
      run: |
        .\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        
    - name: Enable TS
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    
    - name: Create Tunnel & Get Public IP
      run: |
        Start-Process -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389 --log=ngrok.log" -PassThru
        Start-Sleep -Seconds 10
        
        # Lebih banyak waktu untuk memastikan Ngrok sudah berjalan
        $maxRetries = 5
        $retryCount = 0
        $success = $false
        
        while (-not $success -and $retryCount -lt $maxRetries) {
          try {
            $tunnelData = Invoke-RestMethod -Uri http://localhost:4040/api/tunnels -ErrorAction Stop
            $publicUrl = $tunnelData.tunnels.public_url
            Write-Host "NGROK Public URL: $publicUrl"
            $success = $true
          }
          catch {
            $retryCount++
            Write-Host "Attempt $retryCount failed. Waiting before retry..."
            Start-Sleep -Seconds 10
          }
        }
        
        if (-not $success) {
          # Alternatif jika API Ngrok tidak bisa diakses
          Write-Host "Tidak dapat mengambil URL dari API Ngrok."
          Write-Host "Silakan periksa log Ngrok secara manual:"
          Get-Content -Path ngrok.log -Tail 20
        }
      
    - name: Keep Alive
      run: |
        $timer = [Diagnostics.Stopwatch]::StartNew()
        while ($timer.Elapsed.TotalHours -lt 6) {
          Write-Host "VM masih aktif. Waktu berlalu: $($timer.Elapsed.TotalHours) jam"
          Start-Sleep -Seconds 300
        }
